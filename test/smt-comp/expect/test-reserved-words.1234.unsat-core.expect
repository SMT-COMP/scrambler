(set-option :produce-unsat-cores true)
(set-logic ALL)
(declare-fun x9 () Bool)
(declare-fun x12 () Bool)
(declare-fun x8 () Bool)
(declare-fun x7 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1 () Bool)
(declare-fun x13 () Bool)
(declare-fun x6 () Bool)
(declare-fun x11 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x4 () Bool)
(declare-fun x14 () Bool)
(declare-fun x15 () Bool)
(declare-fun x5 () Bool)
(assert (! x2 :named smtcomp1))
(assert (! x9 :named smtcomp2))
(assert (! (let ((x3 x3)) x3) :named smtcomp3))
(assert (! x12 :named smtcomp4))
(assert (! (exists ((x12 Bool)) x12) :named smtcomp5))
(assert (! (forall ((x13 Bool)) (or (not x13) x13)) :named smtcomp6))
(assert (! x14 :named smtcomp7))
(assert (! x8 :named smtcomp8))
(assert (! x5 :named smtcomp9))
(assert (! x3 :named smtcomp10))
(assert (! x1 :named smtcomp11))
(assert (! x4 :named smtcomp12))
(assert (! x7 :named smtcomp13))
(assert (! x10 :named smtcomp14))
(assert (! x6 :named smtcomp15))
(assert (! x13 :named smtcomp16))
(assert (! x15 :named smtcomp17))
(assert (! x11 :named smtcomp18))
(check-sat)
(get-unsat-core)
(exit)
