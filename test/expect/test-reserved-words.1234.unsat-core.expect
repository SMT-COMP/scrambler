(set-option :produce-unsat-cores true)
(set-logic ALL)
(declare-fun x9 () Bool)
(declare-fun x12 () Bool)
(declare-fun x8 () Bool)
(declare-fun x7 () Bool)
(declare-fun x10 () Bool)
(declare-fun x1 () Bool)
(declare-fun x13 () Bool)
(declare-fun x6 () Bool)
(declare-fun x11 () Bool)
(declare-fun x3 () Bool)
(declare-fun x2 () Bool)
(declare-fun x4 () Bool)
(declare-fun x14 () Bool)
(declare-fun x15 () Bool)
(declare-fun x5 () Bool)
(assert (! x2 :named a1))
(assert (! x9 :named a2))
(assert (! (let ((x3 x3)) x3) :named a3))
(assert (! x12 :named a4))
(assert (! (exists ((x12 Bool)) x12) :named a5))
(assert (! (forall ((x13 Bool)) (or (not x13) x13)) :named a6))
(assert (! x14 :named a7))
(assert (! x8 :named a8))
(assert (! x5 :named a9))
(assert (! x3 :named a10))
(assert (! x1 :named a11))
(assert (! x4 :named a12))
(assert (! x7 :named a13))
(assert (! x10 :named a14))
(assert (! x6 :named a15))
(assert (! x13 :named a16))
(assert (! x15 :named a17))
(assert (! x11 :named a18))
(check-sat)
(get-unsat-core)
(exit)
